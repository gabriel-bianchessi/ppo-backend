generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  name            String
  isAdmin         Boolean        @default(false)
  birthDate       DateTime
  email           String         @unique
  emailIsVerified Boolean?       @default(false)
  password        String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime?
  visible         Boolean        @default(true)
  Subscription    Subscription[]
  groups          Group[]
}

model Event {
  id           String         @id @default(uuid())
  title        String
  description  String
  startsAt     DateTime
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?
  visible      Boolean        @default(true)
  Subscription Subscription[]
  type         EventType[]
  subEventOf   Event?         @relation("EventsAndSubevents", fields: [eventId], references: [id])
  eventId      String
  Event        Event[]        @relation("EventsAndSubevents")
}

model Subscription {
  id            String    @id @default(uuid())
  userConfirmed Boolean   @default(true)
  userWent      Boolean
  visible       Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  event         Event     @relation(fields: [eventId], references: [id])
  eventId       String
}

model EventType {
  id                String    @id @default(uuid())
  title             String
  uncaptalizedTitle String
  description       String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime?
  visible           Boolean   @default(true)
  Event             Event?    @relation(fields: [eventId], references: [id])
  eventId           String?
}

model Group {
  id                 String    @id @default(uuid())
  title              String
  uncapitalizedTitle String    @unique
  description        String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime?
  visible            Boolean   @default(true)
  User               User?     @relation(fields: [userId], references: [id])
  userId             String?
}
